@model MindTheGap.Models.GamePlayModel

@{
    ViewBag.Title = "Play";
}

@if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
{
    <div>@ViewBag.ErrorMessage</div>
}
else if (Model != null)
{
    <div class="container">
        <div class="row">
            <div class="col-5"></div>
            <div class="col-4">
                <div class="circle" id="timeleft"></div>
            </div>
            <div class="col-4"></div>
        </div>
    </div>

    <div style="display: none">Answer the question in: <span id="answerTheQuestionInClock"></span></div>

    <div class="question">@Model.QuestionAnswer.Question</div>
    <button class="btn btn-outline-info btn-block answer" id="answer0" onclick="selectAnswer(0)">@Model.QuestionAnswer.Answers[0].Answer</button>
    <button class="btn btn-outline-info btn-block answer" id="answer1" onclick="selectAnswer(1)">@Model.QuestionAnswer.Answers[1].Answer</button>
    <button class="btn btn-outline-info btn-block answer" id="answer2" onclick="selectAnswer(2)">@Model.QuestionAnswer.Answers[2].Answer</button>
    <button class="btn btn-outline-info btn-block answer" id="answer3" onclick="selectAnswer(3)">@Model.QuestionAnswer.Answers[3].Answer</button>


    using (Html.BeginForm())
    {
        @Html.HiddenFor(model => Model.TrainEligibilityModel.Train.RId)
        @Html.HiddenFor(model => Model.QuestionAnswer.Question)
        @Html.HiddenFor(model => Model.QuestionAnswer.Answers[0].Answer)
        @Html.HiddenFor(model => Model.QuestionAnswer.Answers[0].IsCorrect)
        @Html.HiddenFor(model => Model.QuestionAnswer.Answers[1].Answer)
        @Html.HiddenFor(model => Model.QuestionAnswer.Answers[1].IsCorrect)
        @Html.HiddenFor(model => Model.QuestionAnswer.Answers[2].Answer)
        @Html.HiddenFor(model => Model.QuestionAnswer.Answers[2].IsCorrect)
        @Html.HiddenFor(model => Model.QuestionAnswer.Answers[3].Answer)
        @Html.HiddenFor(model => Model.QuestionAnswer.Answers[3].IsCorrect)
        @Html.HiddenFor(model => Model.StartedAt)
        @Html.TextBoxFor(m => m.SelectedAnswer, new { @class = "selectedAnswer", style = "display: none" })

        <input type="submit" id="submitForm" style="display: none" value="Submit" />
    }
    <div class="text-center text-muted" style="margin-top: 15px">Time to train: <span id="timeToTrainClock"></span></div>


    <script type="text/javascript">
        var questionFinished = false;
        function finishQuestion() {
            questionFinished = true;
            var button = $('#submitForm');
            button.click();
            $('#answer0').attr("disabled", "disabled");
            $('#answer1').attr("disabled", "disabled");
            $('#answer2').attr("disabled", "disabled");
            $('#answer3').attr("disabled", "disabled");
        }

        function selectAnswer(answerNumber) {
            var answerValue = $('#answer' + answerNumber).text();
            for (var i = 0; i < 4; i++) {
                $('#answer' + i).removeClass('btn-outline-info');
                $('#answer' + i).removeClass('btn-info');

                if (i === answerNumber) {
                    $('#answer' + i).addClass('btn-info');
                } else {
                    $('#answer' + i).addClass('btn-outline-info');
                }
            }
            $(".selectedAnswer").val(answerValue);

        }
        // Set the date we're counting down to
        var trainArrivalDate = new Date('@Model.TrainEligibilityModel.EligibilityEndTime.ToString("dd MMM yyyy HH:mm:ss")').getTime();
        var answerTheQuestionByDate = new Date();
        answerTheQuestionByDate.setSeconds(answerTheQuestionByDate.getSeconds() + 16);
        // Update the count down every 1 second
        var x = setInterval(function () {

            // Get todays date and time
            var now = new Date().getTime();

            // Find the distance between now and the count down date
            var distanceToTrainArrival = trainArrivalDate - now;
            var distanceToAnswerTheQuestionBy = answerTheQuestionByDate - now;

            // Time calculations for days, hours, minutes and seconds
            //var days = Math.floor(distance / (1000 * 60 * 60 * 24));
            var hoursToTrainArrival = Math.floor((distanceToTrainArrival % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            var minutesToTrainArrival = Math.floor((distanceToTrainArrival % (1000 * 60 * 60)) / (1000 * 60));
            var secondsToTrainArrival = Math.floor((distanceToTrainArrival % (1000 * 60)) / 1000);

            var secondsToAnswerTheQuestionBy = Math.floor((distanceToAnswerTheQuestionBy % (1000 * 60)) / 1000);

            // If the count down is over, write some text
            if (distanceToTrainArrival < 1000) {
                finishQuestion();
            }

            if (distanceToAnswerTheQuestionBy < 1000) {
                finishQuestion();
            }
            if (!questionFinished) {
                if (distanceToTrainArrival < distanceToAnswerTheQuestionBy)
                    $('#timeleft').text(secondsToTrainArrival);
                else
                    $('#timeleft').text(secondsToAnswerTheQuestionBy);

                // Output the result in an element with id="demo"

                document.getElementById("timeToTrainClock").innerHTML = hoursToTrainArrival + "h " + minutesToTrainArrival + "m " + secondsToTrainArrival + "s ";
                document.getElementById("answerTheQuestionInClock").innerHTML = secondsToAnswerTheQuestionBy + "s ";
            }
        }, 1000);
    </script>
}

